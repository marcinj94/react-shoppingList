{"version":3,"sources":["components/Header/Header.js","components/AddItem/AddItem.js","components/ShoppingList/ShoppingItem/ShoppingItem.js","components/ShoppingList/ShoppingList.js","components/BagList/BagItem/BagItem.js","components/BagList/BagList.js","components/App.js","serviceWorker.js","index.js"],"names":["Header","props","textContent","formActive","react_default","a","createElement","className","onClick","click","AddItem","minNumber","state","textInput","numberInput","_this","checkboxInput","errorMessage","handleTextChange","e","setState","target","value","handleNumberChange","handleCheckboxChange","handleSubmitAddItem","preventDefault","_this$state","length","add","handleReset","content","this","onSubmit","htmlFor","type","id","placeholder","required","onChange","min","checked","Fragment","Component","ShoppingItem","shoppingItem","shoppingItems","reverse","map","style","important","active","key","name","quantity","move","bind","delete","ShoppingList","counter","filter","ShoppingList_ShoppingItem_ShoppingItem","BagItem","finishDate","Date","toLocaleString","BagList","BagList_BagItem_BagItem","App","idCounter","showHideForm","addItem","item","prevState","concat","Object","toConsumableArray","deleteItem","index","findIndex","splice","moveItemToBagList","forEach","getTime","components_Header_Header","components_AddItem_AddItem","components_ShoppingList_ShoppingList","components_BagList_BagList","Boolean","window","location","hostname","match","ReactDOM","render","src_components_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"uWAgBeA,SAZA,SAACC,GAEZ,IAAMC,EAAeD,EAAME,WAA2B,YAAd,YAExC,OACIC,EAAAC,EAAAC,cAAA,UAAQC,UAAU,UACdH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,iBAAd,0BACAH,EAAAC,EAAAC,cAAA,UAAQC,UAAU,cAAcC,QAASP,EAAMQ,OAAQP,MC6FpDQ,oNAnGXC,UAAY,IAEZC,MAAQ,CACJC,UAAW,GACXC,YAAaC,EAAKJ,UAClBK,eAAe,EACfC,aAAc,MAGlBC,iBAAmB,SAACC,GAChBJ,EAAKK,SAAS,CACVP,UAAWM,EAAEE,OAAOC,WAI5BC,mBAAqB,SAACJ,GAClBJ,EAAKK,SAAS,CACVN,YAAaK,EAAEE,OAAOC,WAI9BE,qBAAuB,SAACL,GACpBJ,EAAKK,SAAS,CACVJ,eAAgBD,EAAKH,MAAMI,mBAInCS,oBAAsB,SAACN,GACnBA,EAAEO,iBADuB,IAAAC,EAGyBZ,EAAKH,MAA/CC,EAHiBc,EAGjBd,UAAWC,EAHMa,EAGNb,YAAaE,EAHPW,EAGOX,cAG5BH,EAAUe,QAAU,EACPb,EAAKd,MAAM4B,IAAIhB,EAAWC,EAAaE,IAGhDD,EAAKK,SAAS,CACVP,UAAW,GACXC,YAAaC,EAAKJ,UAClBK,eAAe,EACfC,aAAc,KAKtBF,EAAKK,SAAS,CACVH,aAAc,2BAM1Ba,YAAc,WACVf,EAAKK,SAAS,CACVP,UAAW,GACXC,YAAaC,EAAKJ,UAClBK,eAAe,EACfC,aAAc,8EAOlB,IAEMc,EAFaC,KAAK/B,MAAME,WAI1BC,EAAAC,EAAAC,cAAA,WAASC,UAAU,WACfH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,kBAAd,gBACAH,EAAAC,EAAAC,cAAA,QAAMC,UAAU,OAAO0B,SAAUD,KAAKP,qBAClCrB,EAAAC,EAAAC,cAAA,SAAO4B,QAAQ,QAAf,QAEI9B,EAAAC,EAAAC,cAAA,SAAO6B,KAAK,OAAOC,GAAG,OAAOC,YAAY,OAAOC,UAAQ,EAAChB,MAAOU,KAAKpB,MAAMC,UAAW0B,SAAUP,KAAKd,mBACpGc,KAAKpB,MAAMK,cAAgBb,EAAAC,EAAAC,cAAA,QAAMC,UAAU,cAAcyB,KAAKpB,MAAMK,eAEzEb,EAAAC,EAAAC,cAAA,SAAO4B,QAAQ,YAAf,YAEI9B,EAAAC,EAAAC,cAAA,SAAO6B,KAAK,SAASC,GAAG,SAASI,IAAKR,KAAKrB,UAAWW,MAAOU,KAAKpB,MAAME,YAAayB,SAAUP,KAAKT,sBAExGnB,EAAAC,EAAAC,cAAA,SAAO4B,QAAQ,aAAf,YAEI9B,EAAAC,EAAAC,cAAA,SAAO6B,KAAK,WAAWC,GAAG,YAAYK,QAAST,KAAKpB,MAAMI,cAAeuB,SAAUP,KAAKR,wBAE5FpB,EAAAC,EAAAC,cAAA,UAAQC,UAAU,aAAlB,gBAEJH,EAAAC,EAAAC,cAAA,UAAQC,UAAU,aAAaC,QAASwB,KAAKF,aAA7C,UAEF,KAEN,OACI1B,EAAAC,EAAAC,cAAAF,EAAAC,EAAAqC,SAAA,KACKX,UA/FKY,cC8BPC,eA7BM,SAAC3C,GAIlB,IAAM4C,EAAe5C,EAAM6C,cAAcC,UAAUC,IAAI,SAAAH,GAEnD,IAAMI,EAAQJ,EAAaK,UAAY,YAAc,KAErD,OAAIL,EAAaM,OAET/C,EAAAC,EAAAC,cAAA,MAAIC,UAAU,aAAa6C,IAAKP,EAAaT,IACzChC,EAAAC,EAAAC,cAAA,MAAIC,UAAW0C,GAAQJ,EAAaQ,KAApC,KAA4CR,EAAaS,UACzDlD,EAAAC,EAAAC,cAAA,UAAQE,QAASP,EAAMsD,KAAKC,YAAWX,EAAaT,KAApD,cACAhC,EAAAC,EAAAC,cAAA,UAAQE,QAASP,EAAMwD,OAAOD,YAAWX,EAAaT,KAAtD,WAID,OAKf,OACIhC,EAAAC,EAAAC,cAAAF,EAAAC,EAAAqC,SAAA,KACKG,KCKEa,EA5BM,SAACzD,GAElB,IAAM0D,EAAU1D,EAAM6C,cAAcc,OAAO,SAAAf,GAAY,OAAIA,EAAaM,SAAQvB,OAE1EG,EAAU4B,EAAU,EACtBvD,EAAAC,EAAAC,cAAA,OAAKC,UAAU,iBACXH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,mBAAd,kBAAgDoD,EAAhD,KACAvD,EAAAC,EAAAC,cAAA,UACIF,EAAAC,EAAAC,cAACuD,EAAD,CACIf,cAAe7C,EAAM6C,cACrBW,OAAQxD,EAAMwD,OACdF,KAAMtD,EAAMsD,SAIxBnD,EAAAC,EAAAC,cAAA,OAAKC,UAAU,iBACXH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,mBAAd,iBACAH,EAAAC,EAAAC,cAAA,8CAIR,OACIF,EAAAC,EAAAC,cAAAF,EAAAC,EAAAqC,SAAA,KACKX,ICGE+B,EA7BC,SAAC7D,GAIb,IAAM4C,EAAe5C,EAAM6C,cAAcC,UAAUC,IAAI,SAAAH,GAEnD,IAAMkB,EAAa,IAAIC,KAAKnB,EAAakB,YAAYE,iBAErD,OAAKpB,EAAaM,OASP,KAPH/C,EAAAC,EAAAC,cAAA,MAAI8C,IAAKP,EAAaT,IAClBhC,EAAAC,EAAAC,cAAA,UAAKuC,EAAaQ,KAAlB,KAA0BR,EAAaS,UACvClD,EAAAC,EAAAC,cAAA,SAAIyD,GACJ3D,EAAAC,EAAAC,cAAA,UAAQE,QAASP,EAAMwD,OAAOD,YAAWX,EAAaT,KAAtD,aAShB,OACIhC,EAAAC,EAAAC,cAAAF,EAAAC,EAAAqC,SAAA,KACKG,ICEEqB,SAvBC,SAACjE,GAEb,IAAM0D,EAAU1D,EAAM6C,cAAcc,OAAO,SAAAf,GAAY,OAAKA,EAAaM,SAAQvB,OAE3EG,EAAU4B,EAAU,EACtBvD,EAAAC,EAAAC,cAAA,OAAKC,UAAU,YACXH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,cAAd,aAAsCoD,EAAtC,KACAvD,EAAAC,EAAAC,cAAA,UACIF,EAAAC,EAAAC,cAAC6D,EAAD,CACIrB,cAAe7C,EAAM6C,cACrBW,OAAQxD,EAAMwD,WAGhB,KAGd,OACIrD,EAAAC,EAAAC,cAAAF,EAAAC,EAAAqC,SAAA,KACKX,KC6EEqC,oNAzFbC,UAAY,IAEZzD,MAAQ,CACNkC,cAAe,GACf3C,YAAY,KAGdmE,aAAe,WACbvD,EAAKK,SAAS,CACZjB,YAAaY,EAAKH,MAAMT,gBAI5BoE,QAAU,SAAClB,EAAMC,EAAUJ,GACzB,IAAIsB,EAAO,CACTpC,GAAIrB,EAAKsD,UACThB,OACAC,WACAJ,YACAC,QAAQ,EACRY,WAAY,MAQd,OALAhD,EAAKK,SAAS,SAAAqD,GAAS,MAAK,CAC1B3B,cAAa,GAAA4B,OAAAC,OAAAC,EAAA,EAAAD,CAAMF,EAAU3B,eAAhB,CAA+B0B,OAG9CzD,EAAKsD,aACE,KAGTQ,WAAa,SAACzC,GACZ,IAAMU,EAAa6B,OAAAC,EAAA,EAAAD,CAAO5D,EAAKH,MAAMkC,eAE/BgC,EAAQhC,EAAciC,UAAU,SAAAlC,GAAY,OAAIA,EAAaT,KAAOA,IAC1EU,EAAckC,OAAOF,EAAO,GAE5B/D,EAAKK,SAAS,CACZ0B,qBAIJmC,kBAAoB,SAAC7C,GAEnB,IAAMU,EAAa6B,OAAAC,EAAA,EAAAD,CAAO5D,EAAKH,MAAMkC,eAErCA,EAAcoC,QAAQ,SAAArC,GAChBA,EAAaT,KAAOA,IACtBS,EAAaM,QAAS,EACtBN,EAAakB,YAAa,IAAIC,MAAOmB,aAGzCpE,EAAKK,SAAS,CACZ0B,2FAMF,OACE1C,EAAAC,EAAAC,cAAAF,EAAAC,EAAAqC,SAAA,KACEtC,EAAAC,EAAAC,cAAC8E,EAAD,CACE3E,MAAOuB,KAAKsC,aACZnE,WAAY6B,KAAKpB,MAAMT,aAGzBC,EAAAC,EAAAC,cAAC+E,EAAD,CACExD,IAAKG,KAAKuC,QACVpE,WAAY6B,KAAKpB,MAAMT,aAGzBC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,QACbH,EAAAC,EAAAC,cAACgF,EAAD,CACExC,cAAed,KAAKpB,MAAMkC,cAC1BW,OAAQzB,KAAK6C,WACbtB,KAAMvB,KAAKiD,oBAGb7E,EAAAC,EAAAC,cAACiF,EAAD,CACEzC,cAAed,KAAKpB,MAAMkC,cAC1BW,OAAQzB,KAAK6C,sBAlFPlC,cCGE6C,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAAO1F,EAAAC,EAAAC,cAACyF,EAAD,MAASC,SAASC,eAAe,SD2H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,KAAK,SAAAC,GACjCA,EAAaC","file":"static/js/main.e666c51b.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nimport './Header.css'\r\n\r\nconst Header = (props) => {\r\n\r\n    const textContent = !props.formActive ? \"Show form\" : \"Hide form\";\r\n\r\n    return (\r\n        <header className=\"header\">\r\n            <h1 className=\"header__title\">React.js Shopping List</h1>\r\n            <button className=\"header__btn\" onClick={props.click}>{textContent}</button>\r\n        </header>\r\n    );\r\n}\r\n\r\nexport default Header;","import React, { Component } from 'react';\r\nimport './AddItem.css';\r\n\r\nclass AddItem extends Component {\r\n\r\n    minNumber = 1;\r\n\r\n    state = {\r\n        textInput: '',\r\n        numberInput: this.minNumber,\r\n        checkboxInput: false,\r\n        errorMessage: '',\r\n    }\r\n\r\n    handleTextChange = (e) => {\r\n        this.setState({\r\n            textInput: e.target.value\r\n        })\r\n    }\r\n\r\n    handleNumberChange = (e) => {\r\n        this.setState({\r\n            numberInput: e.target.value,\r\n        })\r\n    }\r\n\r\n    handleCheckboxChange = (e) => {\r\n        this.setState({\r\n            checkboxInput: !this.state.checkboxInput\r\n        });\r\n    }\r\n\r\n    handleSubmitAddItem = (e) => {\r\n        e.preventDefault();\r\n\r\n        const { textInput, numberInput, checkboxInput } = this.state;\r\n\r\n\r\n        if (textInput.length >= 3) {\r\n            const func = this.props.add(textInput, numberInput, checkboxInput);\r\n\r\n            if (func) {\r\n                this.setState({\r\n                    textInput: '',\r\n                    numberInput: this.minNumber,\r\n                    checkboxInput: false,\r\n                    errorMessage: '',\r\n                })\r\n\r\n            }\r\n        } else {\r\n            this.setState({\r\n                errorMessage: 'Name was too short!',\r\n            })\r\n        }\r\n\r\n    }\r\n\r\n    handleReset = () => {\r\n        this.setState({\r\n            textInput: '',\r\n            numberInput: this.minNumber,\r\n            checkboxInput: false,\r\n            errorMessage: '',\r\n        });\r\n    }\r\n\r\n\r\n    render() {\r\n\r\n        const formActive = this.props.formActive;\r\n\r\n        const content = formActive ?\r\n\r\n            <section className=\"addItem\">\r\n                <h2 className=\"addItem__title\">Add New Item</h2>\r\n                <form className=\"form\" onSubmit={this.handleSubmitAddItem}>\r\n                    <label htmlFor=\"name\">\r\n                        Name:\r\n                        <input type=\"text\" id=\"name\" placeholder=\"Name\" required value={this.state.textInput} onChange={this.handleTextChange} />\r\n                        {this.state.errorMessage && <span className=\"error__msg\">{this.state.errorMessage}</span>}\r\n                    </label>\r\n                    <label htmlFor=\"quantity\">\r\n                        Quantity:\r\n                        <input type=\"number\" id=\"number\" min={this.minNumber} value={this.state.numberInput} onChange={this.handleNumberChange} />\r\n                    </label>\r\n                    <label htmlFor=\"important\">\r\n                        Important\r\n                        <input type=\"checkbox\" id=\"important\" checked={this.state.checkboxInput} onChange={this.handleCheckboxChange} />\r\n                    </label>\r\n                    <button className=\"form__btn\">Add to list</button>\r\n                </form>\r\n                <button className=\"reset__btn\" onClick={this.handleReset}>Reset</button>\r\n            </section>\r\n            : null;\r\n\r\n        return (\r\n            <>\r\n                {content}\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nexport default AddItem;","import React from 'react';\r\n\r\nimport './ShoppingItem.css';\r\n\r\nconst ShoppingItem = (props) => {\r\n\r\n\r\n\r\n    const shoppingItem = props.shoppingItems.reverse().map(shoppingItem => {\r\n\r\n        const style = shoppingItem.important ? \"important\" : null;\r\n\r\n        if (shoppingItem.active) {\r\n            return (\r\n                <li className=\"list__item\" key={shoppingItem.id}>\r\n                    <h3 className={style}>{shoppingItem.name} x{shoppingItem.quantity}</h3>\r\n                    <button onClick={props.move.bind(this, shoppingItem.id)}>Add to bag</button>\r\n                    <button onClick={props.delete.bind(this, shoppingItem.id)}>Delete</button>\r\n                </li>\r\n            )\r\n        } else {\r\n            return null;\r\n        }\r\n    })\r\n\r\n\r\n    return (\r\n        <>\r\n            {shoppingItem}\r\n        </>\r\n    );\r\n}\r\n\r\nexport default ShoppingItem;","import React from 'react';\r\n\r\nimport './ShoppingList.css';\r\nimport ShoppingItem from './ShoppingItem/ShoppingItem';\r\n\r\nconst ShoppingList = (props) => {\r\n\r\n    const counter = props.shoppingItems.filter(shoppingItem => shoppingItem.active).length;\r\n\r\n    const content = counter > 0 ?\r\n        <div className=\"shopping-list\">\r\n            <h2 className=\"shopping__title\">Shopping list ({counter})</h2>\r\n            <ul >\r\n                <ShoppingItem\r\n                    shoppingItems={props.shoppingItems}\r\n                    delete={props.delete}\r\n                    move={props.move}\r\n                />\r\n            </ul>\r\n        </div > :\r\n        <div className=\"shopping-list\">\r\n            <h2 className=\"shopping__title\">Shopping list</h2>\r\n            <p>There are no items in your list.</p>\r\n        </div >;\r\n\r\n\r\n    return (\r\n        <>\r\n            {content}\r\n        </>\r\n    );\r\n}\r\n\r\nexport default ShoppingList;","import React from 'react';\r\n\r\nconst BagItem = (props) => {\r\n\r\n\r\n\r\n    const shoppingItem = props.shoppingItems.reverse().map(shoppingItem => {\r\n\r\n        const finishDate = new Date(shoppingItem.finishDate).toLocaleString();\r\n\r\n        if (!shoppingItem.active) {\r\n            return (\r\n                <li key={shoppingItem.id}>\r\n                    <h3>{shoppingItem.name} x{shoppingItem.quantity}</h3>\r\n                    <p>{finishDate}</p>\r\n                    <button onClick={props.delete.bind(this, shoppingItem.id)}>Delete</button>\r\n                </li>\r\n            )\r\n        } else {\r\n            return null;\r\n        }\r\n    })\r\n\r\n\r\n    return (\r\n        <>\r\n            {shoppingItem}\r\n        </>\r\n    );\r\n}\r\n\r\nexport default BagItem;","import React from 'react';\r\n\r\nimport BagItem from './BagItem/BagItem';\r\nimport './BagList.css';\r\n\r\nconst BagList = (props) => {\r\n\r\n    const counter = props.shoppingItems.filter(shoppingItem => !shoppingItem.active).length;\r\n\r\n    const content = counter > 0 ?\r\n        <div className=\"bag-list\">\r\n            <h2 className=\"bag__title\">Bag list ({counter})</h2>\r\n            <ul>\r\n                <BagItem\r\n                    shoppingItems={props.shoppingItems}\r\n                    delete={props.delete}\r\n                />\r\n            </ul>\r\n        </div > : null;\r\n\r\n\r\n    return (\r\n        <>\r\n            {content}\r\n        </>\r\n    );\r\n}\r\n\r\nexport default BagList;","import React, { Component } from 'react';\n\nimport Header from './Header/Header';\nimport AddItem from './AddItem/AddItem';\nimport ShoppingList from './ShoppingList/ShoppingList';\nimport BagList from './BagList/BagList';\n\nimport './App.css';\n\nclass App extends Component {\n\n  idCounter = 4;\n\n  state = {\n    shoppingItems: [],\n    formActive: true,\n  }\n\n  showHideForm = () => {\n    this.setState({\n      formActive: !this.state.formActive,\n    })\n  }\n\n  addItem = (name, quantity, important) => {\n    let item = {\n      id: this.idCounter,\n      name,\n      quantity,\n      important,\n      active: true,\n      finishDate: null,\n    }\n\n    this.setState(prevState => ({\n      shoppingItems: [...prevState.shoppingItems, item]\n    }));\n\n    this.idCounter++;\n    return true;\n  }\n\n  deleteItem = (id) => {\n    const shoppingItems = [...this.state.shoppingItems];\n\n    const index = shoppingItems.findIndex(shoppingItem => shoppingItem.id === id);\n    shoppingItems.splice(index, 1);\n\n    this.setState({\n      shoppingItems\n    })\n  }\n\n  moveItemToBagList = (id) => {\n\n    const shoppingItems = [...this.state.shoppingItems];\n\n    shoppingItems.forEach(shoppingItem => {\n      if (shoppingItem.id === id) {\n        shoppingItem.active = false;\n        shoppingItem.finishDate = new Date().getTime();\n      }\n    });\n    this.setState({\n      shoppingItems\n    })\n  }\n\n  render() {\n\n    return (\n      <>\n        <Header\n          click={this.showHideForm}\n          formActive={this.state.formActive}\n        />\n\n        <AddItem\n          add={this.addItem}\n          formActive={this.state.formActive}\n        />\n\n        <div className=\"list\">\n          <ShoppingList\n            shoppingItems={this.state.shoppingItems}\n            delete={this.deleteItem}\n            move={this.moveItemToBagList}\n          />\n\n          <BagList\n            shoppingItems={this.state.shoppingItems}\n            delete={this.deleteItem}\n          />\n        </div>\n\n      </>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}